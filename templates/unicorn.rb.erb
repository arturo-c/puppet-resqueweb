# config/unicorn.rb
app_path = "<%= app_path %>"

current_path = "#{app_path}/current"
shared_path = "#{app_path}/shared"
gem_path = "/home/deploy/.rbenv"

Unicorn::HttpServer::START_CTX[0] = "#{gem_path}/shims/unicorn"

preload_app <%= preload %>
working_directory current_path

timeout <%= unicorn_timeout %>
worker_processes <%= worker_processes %>

user '<%= user %>', '<%= group %>'

# listen to the default port
listen <%= unicorn_port %>

stderr_path "#{shared_path}/log/unicorn.stderr.log"
stdout_path "#{shared_path}/log/unicorn.stdout.log"

pid "/var/run/unicorn/pids/<%= app_name %>.<%= environment %>.pid"

before_exec do |server|
  ENV["BUNDLE_GEMFILE"] = "#{current_path}/Gemfile"
end

before_fork do |server, worker|
  # Before forking, kill the master process that belongs to the .oldbin PID.
  # This enables 0 downtime deploys.
  old_pid = "/var/run/unicorn/pids/<%= app_name %>.<%= environment %>.pid.oldbin"
  if File.exists?(old_pid) && server.pid != old_pid
    begin
      Process.kill("QUIT", File.read(old_pid).to_i)
    rescue Errno::ENOENT, Errno::ESRCH
      # someone else did our job for us
    end
  end
end